{
  overview_dashboard(
    title,
    uid,
    logoURL,
    seriesSelector='__name__ =~ ".+"',
    type='prometheus',
    dropdownLabel='Instance',
    dropdownSelector='instance',
    dropdownAllValueSelector='.+',
    unit='pps',
    query='count by (__name__) ({%s, instance=~"$instance", job=~"$job"})',
    drawStyle='line',
    description='Shows the number of samples received by metric name received for this integration.',
    legendFormat='__auto',
    jobLabel='Job',
    jobSelector=seriesSelector,
    allValueJob='.+'
  )::
    {
      editable: true,
      fiscalYearStartMonth: 0,
      graphTooltip: 0,
      links: [],
      liveNow: false,
      panels: [
        {
          gridPos: {
            h: 12,
            w: 7,
            x: 0,
            y: 0,
          },
          id: 1,
          options: {
            mode: 'markdown',
            code: {
              language: 'plaintext',
              showLineNumbers: false,
              showMiniMap: false,
            },
            content: std.format('<center><img style="width:auto;max-height:320px;" src="%s"></center>', logoURL),
          },
          pluginVersion: '9.4.3',
          title: 'Logo',
          type: 'text',
        },
        {
          type: 'timeseries',
          title: 'Samples Received',
          datasource: {
            uid: '$datasource',
            type: type,
          },
          gridPos: {
            x: 7,
            y: 0,
            w: 17,
            h: 12,
          },
          id: 7,
          targets: [
            {
              datasource: {
                type: type,
                uid: '$datasource',
              },
              refId: 'A',
              editorMode: 'code',
              expr: std.format(query, seriesSelector),
              legendFormat: legendFormat,
              range: true,
            },
          ],
          options: {
            tooltip: {
              mode: 'single',
              sort: 'none',
            },
            legend: {
              showLegend: true,
              displayMode: 'list',
              placement: 'bottom',
              calcs: [],
            },
          },
          fieldConfig: {
            defaults: {
              custom: {
                drawStyle: drawStyle,
                lineInterpolation: 'linear',
                barAlignment: 0,
                lineWidth: 1,
                fillOpacity: 0,
                gradientMode: 'none',
                spanNulls: false,
                showPoints: 'auto',
                pointSize: 5,
                stacking: {
                  mode: 'none',
                  group: 'A',
                },
                axisPlacement: 'auto',
                axisLabel: '',
                axisColorMode: 'text',
                scaleDistribution: {
                  type: 'linear',
                },
                axisCenteredZero: false,
                hideFrom: {
                  tooltip: false,
                  viz: false,
                  legend: false,
                },
                thresholdsStyle: {
                  mode: 'off',
                },
                lineStyle: {
                  fill: 'solid',
                },
              },
              color: {
                mode: 'palette-classic',
              },
              mappings: [],
              thresholds: {
                mode: 'absolute',
                steps: [
                  {
                    value: null,
                    color: 'green',
                  },
                  {
                    value: 80,
                    color: 'red',
                  },
                ],
              },
              unit: unit,
            },
            overrides: [],
          },
          description: description,
        },
      ],
      refresh: '',
      revision: 1,
      schemaVersion: 38,
      style: 'dark',
      tags: [],
      templating: {
        list: [
          {
            current: {
              selected: false,
              text: 'default',
              value: 'default',
            },
            hide: 0,
            includeAll: false,
            label: 'Data source',
            multi: false,
            name: 'datasource',
            options: [],
            query: type,
            queryValue: '',
            refresh: 1,
            regex: '(?!grafanacloud-usage|grafanacloud-ml-metrics).+',
            skipUrlSync: false,
            type: 'datasource',
          },
          {
            allValue: dropdownAllValueSelector,
            current: {
              text: 'All',
              value: [
                '$__all',
              ],
            },
            datasource: '$datasource',
            definition: std.format('label_values({%s}, %s)', [seriesSelector, dropdownSelector]),
            hide: 0,
            includeAll: true,
            label: dropdownLabel,
            multi: true,
            name: dropdownSelector,
            options: [],
            query: std.format('label_values({%s}, %s)', [seriesSelector, dropdownSelector]),
            refresh: 1,
            regex: '',
            skipUrlSync: false,
            sort: 0,
            tagValuesQuery: '',
            tags: [],
            tagsQuery: '',
            type: 'query',
            useTags: false,
          },
          {
            allValue: allValueJob,
            current: {
              text: 'All',
              value: [
                '$__all',
              ],
            },
            datasource: '$datasource',
            definition: std.format('label_values({%s}, job)', jobSelector),
            hide: 0,
            includeAll: true,
            label: jobLabel,
            multi: true,
            name: 'job',
            options: [],
            query: std.format('label_values({%s}, job)', jobSelector),
            refresh: 1,
            regex: '',
            skipUrlSync: false,
            sort: 0,
            tagValuesQuery: '',
            tags: [],
            tagsQuery: '',
            type: 'query',
            useTags: false,
          },
        ],
      },
      time: {
        from: 'now-6h',
        to: 'now',
      },
      timepicker: {},
      timezone: '',
      title: title,
      version: 1,
      weekStart: '',
      uid: uid,
    },
}
