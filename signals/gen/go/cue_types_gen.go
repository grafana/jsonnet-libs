// Code generated by "cue exp gengotypes"; DO NOT EDIT.

package signal

type AggLevel string

type AggFunction string

type SignalType string

type Signal struct {
	Name string `json:"name"`

	Type string `json:"type"`

	Unit string `json:"unit,omitempty"`

	Description string `json:"description,omitempty"`

	Optional bool `json:"optional,omitempty"`

	AggLevel string `json:"aggLevel,omitempty"`

	AggFunction string `json:"aggFunction,omitempty"`

	LegendCustomTemplate any/* TODO: IncompleteKind: _|_ */ `json:"legendCustomTemplate,omitempty"`

	Sources map[string]struct {
		Expr string `json:"expr"`

		ExprWrappers []string `json:"exprWrappers,omitempty"`

		RangeFunction string `json:"rangeFunction,omitempty"`

		AggFunction string `json:"aggFunction,omitempty"`

		AggKeepLabels []string `json:"aggKeepLabels,omitempty"`

		InfoLabel string `json:"infoLabel,omitempty"`

		LegendCustomTemplate string `json:"legendCustomTemplate,omitempty"`

		ValueMappings []struct {
			Type string `json:"Type"`

			Options map[string]struct {
				Text string `json:"Text"`

				Color string `json:"Color"`

				Index int64 `json:"Index"`
			} `json:"Options"`
		} `json:"valueMappings,omitempty"`

		Quantile any/* CUE number; int64 or float64 */ `json:"quantile,omitempty"`
	} `json:"sources"`
}

type SignalGroup struct {
	Datasource string `json:"datasource,omitempty"`

	DatasourceLabel string `json:"datasourceLabel,omitempty"`

	// filteringSelector?: [...string]
	// groupLabels?: [...string]
	// instanceLabels?: [...string]
	AggFunction AggFunction `json:"aggFunction,omitempty"`

	AggLevel AggLevel `json:"aggLevel,omitempty"`

	DiscoveryMetric map[string]string `json:"discoveryMetric"`

	LegendCustomTemplate string `json:"legendCustomTemplate,omitempty"`

	Interval string `json:"interval,omitempty"`

	AlertsInterval string `json:"alertsInterval,omitempty"`

	// varAdHocEnabled?: bool
	// varAdHocLabels?: [...string]
	// enableLokiLogs?: bool
	Signals map[string]Signal `json:"signals"`
}

type SignalSource struct {
	Expr string `json:"expr"`

	ExprWrappers []string `json:"exprWrappers,omitempty"`

	RangeFunction string `json:"rangeFunction,omitempty"`

	AggFunction string `json:"aggFunction,omitempty"`

	AggKeepLabels []string `json:"aggKeepLabels,omitempty"`

	InfoLabel string `json:"infoLabel,omitempty"`

	LegendCustomTemplate string `json:"legendCustomTemplate,omitempty"`

	ValueMappings []struct {
		Type string `json:"Type"`

		Options map[string]struct {
			Text string `json:"Text"`

			Color string `json:"Color"`

			Index int64 `json:"Index"`
		} `json:"Options"`
	} `json:"valueMappings,omitempty"`

	Quantile any/* CUE number; int64 or float64 */ `json:"quantile,omitempty"`
}
